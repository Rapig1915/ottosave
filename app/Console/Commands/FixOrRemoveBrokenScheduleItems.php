<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\Institution;
use Illuminate\Support\Facades\DB;

class FixOrRemoveBrokenScheduleItems extends Command
{
    protected $signature = 'dym:fix-broken-schedule_items';
    protected $description = 'One time fix to restore or remove broken schedule items';

    public function __construct()
    {
        parent::__construct();
    }

    public function handle()
    {
        $this->setAccountIdsFromBackupVersion();
        $this->deleteBrokenScheduleItems();
        $this->prepareScheduleItemsForRestoration();
    }

    private function setAccountIdsFromBackupVersion()
    {
        $scheduleItemIdsByAccountId = $this->getListOfScheduleItemIdsFromBackup();
        foreach ($scheduleItemIdsByAccountId as $accountId => $schduleItemIds) {
            DB::table('schedule_items')->whereIn('id', $schduleItemIds)->update(['account_id' => $accountId]);
        }
    }

    private function deleteBrokenScheduleItems()
    {
        $countOfIrreparableScheduleItems = \DB::table('schedule_items')->whereNull('bank_account_id')->whereNull('account_id')->count();
        echo "removing $countOfIrreparableScheduleItems irreparable schedule items \n";
        \DB::table('schedule_items')->whereNull('bank_account_id')->whereNull('account_id')->delete();
    }

    private function prepareScheduleItemsForRestoration()
    {
        $scheduleItemIdsByAccountId = $this->getListOfScheduleItemIdsFromBackup();
        foreach ($scheduleItemIdsByAccountId as $accountId => $schduleItemIds) {
            $scheduleItems = \DB::table('schedule_items')->whereIn('id', $schduleItemIds)->get();
            $countOfReparedScheduleItems = 0;
            foreach ($scheduleItems as $scheduleItem) {
                $bankAccount = \DB::table('bank_accounts')->where('id', $scheduleItem->bank_account_id)->first();
                if ($bankAccount->account_id !== $accountId) {
                    $countOfReparedScheduleItems++;
                    //prepare schedule item to be replaced on the correct monthly bills account next time that account is saved
                    \DB::table('schedule_items')->where('id', $scheduleItem->id)->update(['bank_account_id' => null, 'bank_account_slug' => 'monthly_bills']);
                }
            }
            if ($countOfReparedScheduleItems > 0) {
                echo "Prepared $countOfReparedScheduleItems schedule items for reparation in account with id $accountId \n";
            }
        }
    }

    private function getListOfScheduleItemIdsFromBackup()
    {
        return [
            2 => [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 92, 122, 123, 124, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 217, 218, 220,221, 293, 627, 631, 711, 983, 984, 1007, 1175, 1614, 1998, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220],
            4 => [1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1518, 1519, 1606,1607, 1608, 1706, 1948, 1997, 2048, 2171, 2297],
            5 => [71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 155, 156, 157, 158, 159, 160, 179, 385, 545, 546, 547, 660, 712, 734, 735, 736, 737, 738, 773, 1209, 1613],
            6 => [97, 135, 136, 624, 757, 1205, 1211, 1212, 1231, 1288, 1289, 1290],
            7 => [231, 233, 235, 245, 280, 383, 384, 403, 415, 462, 669, 739, 741, 742, 743, 1148, 1149, 1150, 1151, 1152, 1153, 1192, 1283, 1284, 1286],
            8 => [357, 358, 359],
            12 => [2149],
            14 => [93, 94, 95, 125, 126, 127, 128, 129, 130, 131, 133, 312, 482, 533, 706, 707, 709, 710, 713, 1119, 1120, 1121, 1166],
            15 => [164, 165, 166, 167, 168, 169, 170, 171, 172],
            16 => [299, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447],
            24 => [241, 242, 243],
            30 => [784, 785, 786, 787, 788, 791, 792, 793, 794, 795, 796],
            33 => [207, 208, 210, 213, 414, 661, 663, 664, 665, 666, 667, 668],
            35 => [163, 301, 302, 303, 304, 307, 308, 309, 315, 320, 321, 322, 323, 324, 325, 326, 327],
            36 => [222, 223, 224, 225, 226, 227, 228],
            40 => [190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 205, 206, 246, 247, 248, 671, 999],
            44 => [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 290, 291, 292, 317, 318, 319, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377],
            48 => [798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 820],
            54 => [949, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1107, 1112, 1113, 1114, 1165],
            106 => [763],
            112 => [677, 678, 679, 680, 681, 682, 683, 684, 685],
            122 => [2130],
            154 => [2249, 2250, 2251, 2252, 2254, 2260],
            193 => [416, 417, 418, 419, 420],
            212 => [989, 990, 992, 993, 995, 998, 1106, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1210, 1241],
            213 => [421, 422, 423, 424, 425, 426, 427, 428],
            289 => [448],
            323 => [463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481],
            335 => [542, 543, 544],
            366 => [625],
            368 => [549, 568, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607,612, 615, 616, 617, 621, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659],
            468 => [893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926,927, 928, 930, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945],
            488 => [774, 775, 776, 777, 778, 779, 780, 781, 782, 783],
            495 => [1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042],
            497 => [764, 766, 946, 1056],
            506 => [1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1043],
            516 => [1001, 1002, 1003, 1004, 1005, 1006],
            522 => [1048, 1049, 1050, 1051, 1052, 1053, 1054],
            526 => [1061, 1062, 1064, 1065, 1066, 1068, 1074, 1077, 1078, 1079, 1094, 1096, 1097, 1099, 1100, 1108, 1109, 1110, 1111, 1116],
            549 => [1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145],
            570 => [1176, 1177, 1178, 1179],
            588 => [1201, 1202],
            594 => [1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266],
            610 => [1213, 1214, 1215, 1216],
            613 => [1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230],
            624 => [1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309],
            633 => [1312, 1313, 1341, 1342],
            634 => [1344, 1345, 1346, 1347, 1348, 1349],
            635 => [1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487],
            638 => [1343],
            639 => [1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365],
            636 => [1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591],
            637 => [1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603],
            657 => [1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638],
            658 => [1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656],
            659 => [1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669],
            640 => [2261, 2262, 2263, 2264, 2265, 2266, 2272],
            641 => [2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284],
            642 => [2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072],
            643 => [2097, 2098, 2099, 2100, 2101, 2106, 2108],
            644 => [2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120],
            650 => [2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296],
            653 => [2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046],
            654 => [2131, 2132, 2133, 2134],
            660 => [1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681],
            661 => [2123, 2124, 2125, 2126, 2127, 2128, 2129],
            663 => [1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718],
            665 => [2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060],
            669 => [1791],
            680 => [1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984],
            682 => [1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947],
            683 => [1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960],
            684 => [1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972],
            685 => [1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996],
            686 => [2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212],
        ];
    }
}
